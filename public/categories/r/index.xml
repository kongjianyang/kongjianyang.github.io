<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on KJY</title>
    <link>https://kongjianyang.github.io/categories/r/</link>
    <description>Recent content in R on KJY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Aug 2023 21:14:13 -0700</lastBuildDate><atom:link href="https://kongjianyang.github.io/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Switch函数妙用</title>
      <link>https://kongjianyang.github.io/cn/2023/08/19/switch/</link>
      <pubDate>Sat, 19 Aug 2023 21:14:13 -0700</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2023/08/19/switch/</guid>
      <description>R 中的 switch 函数是一种控制流程的函数，它允许您根据变量的值执行不同的操作。switch 函数的语法如下：
switch(value, case1 = statement1, case2 = statement2, ..., default = statement_default) 其中，value 是您要测试的变量，case1、case2 等是您要执行的操作，statement_default 是默认操作。
例如，以下代码使用 switch 函数根据变量 day 的值来打印不同的星期几：
day &amp;lt;- &amp;quot;Monday&amp;quot; switch(day, Monday = &amp;quot;今天是星期一&amp;quot;, Tuesday = &amp;quot;今天是星期二&amp;quot;, Wednesday = &amp;quot;今天是星期三&amp;quot;, Thursday = &amp;quot;今天是星期四&amp;quot;, Friday = &amp;quot;今天是星期五&amp;quot;, Saturday = &amp;quot;今天是星期六&amp;quot;, Sunday = &amp;quot;今天是星期天&amp;quot;) 这段代码将打印以下输出：
今天是星期一 与常用处理TRUE和FALSE条件的if相比，switch语句主要用于处理数字或者字符串，并根据输入返回某个分支。
switch 函数有许多好处，包括：
它易于使用。 它可以简化代码。 它可以提高代码的可读性和可维护性。 它可以提高代码的性能。 switch 函数可以用来替换 if-else 语句，从而简化代码。
除此之外，switch函数还能和function连用，实现复杂功能
FUN &amp;lt;- function(df, do.this){ switch(do.this, T1={X &amp;lt;- t(df) P &amp;lt;- nrow(df) }, T2={X &amp;lt;- colMeans(df) P &amp;lt;- ncol(df) }, stop(&amp;quot;Enter something that switches me!</description>
    </item>
    
    <item>
      <title>R语言中的非标准计算</title>
      <link>https://kongjianyang.github.io/cn/2023/08/15/nse/</link>
      <pubDate>Tue, 15 Aug 2023 11:49:19 -0700</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2023/08/15/nse/</guid>
      <description>首先R语言中的非标准计算现在很混乱，在发展过程中也不是很好理清，但是需要掌握，可以给日常工作带来便捷。
R语言中有原生的非标准计算，主要是base包的函数，也有tidyeval，rlang包提供的非标准计算。
 rlang是一个包，作者还是Hadley Wickham，提供了R语言的核心语言功能。它不是base R的一部分，但它是许多R包的基础。rlang提供了强大的工具来处理R语言的语法，这使得它非常适合编写高效和可扩展的R代码。
 R base R base包中的实现非标准计算的函数有：
 语法解析：substitute(), parse(), deparse() 表达式构造：quote() 表达式求值：eval(), source() 表达式：expression()  # parse主要负责把字符解析为R语言表达式。 # 表达式是可以被求值的代码。 parse(text = &amp;quot;1+2&amp;quot;) # deparse是相反的，是把R表达式逆解析为字符。 deparse(expression(1+2)) # quote则是捕捉未计算的表达式，不进行计算（求值） quote(1+2) # eval来完成对表达式进行计算（求值） eval(quote(1+2)) 一个综合性例子
rm(list = ls()) # quote是捕捉未计算的表达式 a1 &amp;lt;- quote(mean(mtcars$wt)) # expression是表达式 a2 &amp;lt;- expression(mean(mtcars$wt)) # 不加text会报错 a3 &amp;lt;- parse(text = &amp;quot;mean(mtcars$wt)&amp;quot;) # 都能计算出 3.21725 eval(a1) eval(a2) eval(a3) # 逆解析的结果不同 deparse(a1) deparse(a2) deparse(a3) tidyeval 在tidyverse工具链中，tidyeval提供比较一致的非标准计算服务。tidyeval的函数主要在rlang包中。</description>
    </item>
    
    <item>
      <title>R语言编程补充</title>
      <link>https://kongjianyang.github.io/cn/2023/02/07/advanced_r/</link>
      <pubDate>Tue, 07 Feb 2023 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2023/02/07/advanced_r/</guid>
      <description>R编程补充 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R整洁代码</title>
      <link>https://kongjianyang.github.io/cn/2022/12/05/rtidy/</link>
      <pubDate>Mon, 05 Dec 2022 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/12/05/rtidy/</guid>
      <description>R整洁代码 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言purrr包详细介绍</title>
      <link>https://kongjianyang.github.io/cn/2022/05/17/purrr/</link>
      <pubDate>Tue, 17 May 2022 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/17/purrr/</guid>
      <description>R语言purrr包详细介绍 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言ggblanket美化ggplot的图</title>
      <link>https://kongjianyang.github.io/cn/2022/05/15/ggblanket/</link>
      <pubDate>Sun, 15 May 2022 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/15/ggblanket/</guid>
      <description>R语言ggblanket美化ggplot图 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言stringr学习</title>
      <link>https://kongjianyang.github.io/cn/2022/05/05/strigr/</link>
      <pubDate>Thu, 05 May 2022 23:57:39 -0400</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/05/strigr/</guid>
      <description>stringr包被定义为一致的、简单易用的字符串工具集。所有的函数和参数定义都具有一致性，比如，用相同的方法进行NA处理和0长度的向量处理。
对于R语言本身的base包提供的字符串基础函数，随着时间的积累，已经变得很多地方不一致，不规范的命名，不标准的参数定义，很难看一眼就上手使用。字符串处理在其他语言中都是非常方便的事情，R语言在这方面确实落后了。stringr包就是为了解决这个问题，让字符串处理变得简单易用，提供友好的字符串操作接口。
R语言中处理字符串主要有stringi和stringr两种，更加推荐使用stringr,因为stringi命令太多太复杂了&amp;hellip;
来自Hadley Wickham的评价
 stringi provides tools to do anything we could ever want to do with strings, where stringr provides tools to do the most common 95% of operations. This allows stringr to be much simpler, and the cost of some flexibility. Additionally stringi is implemented in C using the ICU string library, so it&amp;rsquo;s very fast and very correct (it deals with unicode better than base R).</description>
    </item>
    
    <item>
      <title>R语言必须掌握的包</title>
      <link>https://kongjianyang.github.io/cn/2022/05/04/r_packages/</link>
      <pubDate>Wed, 04 May 2022 22:21:53 -0400</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/04/r_packages/</guid>
      <description>这是网络上收集的内容，具有一些参考价值
qinwf/awesome-R: A curated list of awesome R packages, frameworks and software. (github.com) 但是对于我的日常来讲，会有以下一些包进行日常使用，可以常用常新
1. 数据导入 【精】readr：实现表格数据的快速导入。https://readr.tidyverse.org readxl：读取Microsoft Excel电子表格数据
dplyr：提供了一个访问常见数据库的接口
data.table：data.table包的fread()函数可以快速读取大数据集
rio：一站式导入/导出几乎所有格式数据（使用import()/export()函数）
2. 数据整理 【精】tidyr：用于整理表格数据的布局
【精】dplyr：用于将多个数据表连接成一个整齐的数据集
purrr：函数式编程工具，在做数据整理时非常有用。
3. 数据可视化 【精】ggplot2及其扩展：ggplot2包提供了一个强大的绘图系统，并实现了以下扩展
ggthemes：提供扩展的图形风格主题
【精】ggpubr: 生成杂志期刊等出版物的图形的包，是ggplot的一个补充。
ggrepel：用于避免图形标签重叠,美化ggplot；
cowplot：ggplot2拓展工具箱（多图合并、图层叠加、添加标签等）
【精】see：ggplot2拓展工具箱（更丰富更美观的主题配色方案）Model Visualisation Toolbox for easystats and ggplot2 • see 4. 数据转换 【精】dplyr：一个用于高效数据清理的R包。视频学习课程
magrittr：一个高效的管道操作工具包。
【精】pipeR: 比magrittr更好用的管道操作工具包 Introduction | pipeR Tutorial (renkun-ken.github.io) tibble：高效的显示表格数据的结构
【精】stringr：一个字符串处理工具集
data.table：用于快速处理大数据集
stringi：一个快速字符串处理工具</description>
    </item>
    
    <item>
      <title>R语言必须掌握的包</title>
      <link>https://kongjianyang.github.io/cn/2022/05/04/r_packages/</link>
      <pubDate>Wed, 04 May 2022 22:21:53 -0400</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/04/r_packages/</guid>
      <description>这是网络上收集的内容，具有一些参考价值
qinwf/awesome-R: A curated list of awesome R packages, frameworks and software. (github.com) 但是对于我的日常来讲，会有以下一些包进行日常使用，可以常用常新
1. 数据导入 【精】readr：实现表格数据的快速导入。https://readr.tidyverse.org readxl：读取Microsoft Excel电子表格数据
dplyr：提供了一个访问常见数据库的接口
data.table：data.table包的fread()函数可以快速读取大数据集
rio：一站式导入/导出几乎所有格式数据（使用import()/export()函数）
2. 数据整理 【精】tidyr：用于整理表格数据的布局
【精】dplyr：用于将多个数据表连接成一个整齐的数据集
purrr：函数式编程工具，在做数据整理时非常有用。
3. 数据可视化 【精】ggplot2及其扩展：ggplot2包提供了一个强大的绘图系统，并实现了以下扩展
ggthemes：提供扩展的图形风格主题
【精】ggpubr: 生成杂志期刊等出版物的图形的包，是ggplot的一个补充。
ggrepel：用于避免图形标签重叠,美化ggplot；
cowplot：ggplot2拓展工具箱（多图合并、图层叠加、添加标签等）
【精】see：ggplot2拓展工具箱（更丰富更美观的主题配色方案）Model Visualisation Toolbox for easystats and ggplot2 • see 4. 数据转换 【精】dplyr：一个用于高效数据清理的R包。视频学习课程
magrittr：一个高效的管道操作工具包。
【精】pipeR: 比magrittr更好用的管道操作工具包 Introduction | pipeR Tutorial (renkun-ken.github.io) tibble：高效的显示表格数据的结构
【精】stringr：一个字符串处理工具集
data.table：用于快速处理大数据集
stringi：一个快速字符串处理工具</description>
    </item>
    
    <item>
      <title>R语言查看函数源码并修改</title>
      <link>https://kongjianyang.github.io/cn/2022/05/04/r_raw_code/</link>
      <pubDate>Wed, 04 May 2022 21:25:49 -0400</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2022/05/04/r_raw_code/</guid>
      <description>在R语言中可以检查各种包内的函数，如果有必要的话可以进行修改已满足自己的需要，接下来介绍几个方法查看函数源码。
  直接键入函数(不加括号)，大部分函数源代码就可以直接显现出来。
  用函数page()，不过，结果在另一个窗口显示,选择电脑上的程序打开
  用函数edit(), 这个函数允许我们来修改函数，修改的函数可以直接用。函数edit()不仅可以修改包中的函数作为急用，也可以用来修改自己正在写的函数。并且这个命令查看的源码会有高亮显示，比较方便
  对于计算方法不同的函数，要用methods()来定义具体的查看对象
  methods()得出的类函数中带星号标注的源代码，用函数getAnywhere()
  直接上CRAN 下载源代码包
  </description>
    </item>
    
    <item>
      <title>R语言中的多元方差分析【MANOVA】</title>
      <link>https://kongjianyang.github.io/cn/2021/06/17/manova/</link>
      <pubDate>Thu, 17 Jun 2021 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2021/06/17/manova/</guid>
      <description>R语言中的多元方差分析【MANOVA】 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言anova进阶</title>
      <link>https://kongjianyang.github.io/cn/2021/05/17/anova_advance/</link>
      <pubDate>Mon, 17 May 2021 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2021/05/17/anova_advance/</guid>
      <description>R语言anova进阶 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言使用dplyr编程【练习】</title>
      <link>https://kongjianyang.github.io/cn/2020/12/14/dplyr/</link>
      <pubDate>Mon, 14 Dec 2020 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2020/12/14/dplyr/</guid>
      <description>R语言使用dplyr编程【练习】 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言data.table学习</title>
      <link>https://kongjianyang.github.io/cn/2020/05/05/data.table/</link>
      <pubDate>Tue, 05 May 2020 23:57:39 -0400</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2020/05/05/data.table/</guid>
      <description>关于data.table和pandas之间的比较：A data.table and pandas small stroll · Home (atrebas.github.io) 关于data.table和dplyr之间的比较：A data.table and dplyr tour · Home (atrebas.github.io) 介绍 data.frame是R内置的、默认的数据框类型（即一个具有行和列的数据表）。从外部导入的数据一般都以data.frame数据框格式在R里面进行处理和分析。
data.table作为一种高级数据类型，首先继承了data.frame基础数据类型，其官方文档 已经明确说明“data.table是data.frame的扩展（extension）”。
data.table具备很多独特而出色的性质，与其他数据类型（如data.frame、tibble/tbl_df）相比具有很多优势。
 高效：轻松、快速处理GB级别的大数据，并且融合了SQL数据库的语法风格 极简：只需很短的代码就能完成数据的行、列、分组、合并、重塑等相关操作 丰富：数据类型自带筛选、计算、分组、合并等多种方法，无需借助其他函数  此外，一部分R用户需要在数据框里面“嵌套表”，由于data.frame无法实现而十分推崇tibble（tbl_df）。其实，这一点不仅tibble能实现，data.table也完全能实现。
Jan Gorecki 曾对比过不同开源软件及程序包在数据处理方面的性能，结果发现，data.table在数据处理效率上秒杀一大批工具包，甚至轻松超越Python的pandas包和R语言的dplyr包（结果如下图，测试数据规模为5 GB）。而当数据规模达到50 GB，pandas和dplyr都已经hold不住了（报错或内存溢出），但data.table依然稳居榜首（详见：数据处理工具性能大比拼 ）。
使用data.table包并不意味着排斥或弃用其他R包——相反，data.table包是能够和tidyverse、dplyr等著名R包兼容并存、相辅相成的。
这里需要明确几个事实：
 tidyverse本身只是一系列常用包的集合（包括dplyr、ggplot2、lubridate、stringr、tibble、tidyr等），并且载入时会为用户默认载入某些常用包，但它本身并没有什么实质性的函数（不信可以查看它的帮助文档）。 管道操作符（%&amp;gt;%）非常好用，也与data.table完全兼容，但它本身既不是tidyverse包里的，也不是dplyr包里的，而是magrittr包里的。 dplyr包的各种数据操作或处理函数，完全适用于data.frame、tibble/tbl_df、data.table等数据类型，因此data.table与dplyr并不冲突（比如，我个人也喜欢用dplyr::left_join()函数对data.table数据进行匹配拼接处理）。  总之：
 tidyverse是建议安装的一个综合性R包（并不必然与tibble相联系） dplyr是建议掌握的一个数据处理R包（并不必然与tibble相联系） data.table是强烈建议掌握的一个兼具数据类型和数据处理功能的R包 这三者是可以兼容并包、组合使用的  data.table包提供了一个非常简洁的通用格式：DT[i,j,by]，一句话概括：用 i 选择行，用 j 操作列，根据 by 分组。
其中，j 表达式非常强大和灵活，可以选择、修改、汇总、计算新列，甚至可以接受任意表达式。需要记住的最关键一点是：只要返回等长元素或长度为 1 元素的 list，每个 list 元素将转化为结果 data.table 的一列。
注意:
data.table之后，一些常规的data.frame的操作就失效了，譬如：
data[,-1]、data[,1]这样的操作就不是这么用的了。
使用data.table包操作数据 data.table包提供了一个加强版的data.frame，它运行效率极高，而且能够处理适合内存的大数据集，它使用[]实现了一种自然地数据操作语法。使用下面命令进行安装：
install.packages(&amp;quot;data.table&amp;quot;) 载入包：</description>
    </item>
    
    <item>
      <title>R语言data.table实战</title>
      <link>https://kongjianyang.github.io/cn/2020/05/05/data.table/</link>
      <pubDate>Tue, 05 May 2020 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2020/05/05/data.table/</guid>
      <description>R语言data.table实战 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言元编程</title>
      <link>https://kongjianyang.github.io/cn/2020/04/17/r%E8%AF%AD%E8%A8%80%E5%85%83%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Fri, 17 Apr 2020 12:15:02 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2020/04/17/r%E8%AF%AD%E8%A8%80%E5%85%83%E7%BC%96%E7%A8%8B/</guid>
      <description>R语言元编程 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.</description>
    </item>
    
    <item>
      <title>R语言绘制桑吉图</title>
      <link>https://kongjianyang.github.io/cn/2019/10/11/sankey/</link>
      <pubDate>Fri, 11 Oct 2019 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2019/10/11/sankey/</guid>
      <description>R语言绘制桑吉图 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R中处理错误</title>
      <link>https://kongjianyang.github.io/cn/2019/06/07/r_errors/</link>
      <pubDate>Fri, 07 Jun 2019 14:32:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2019/06/07/r_errors/</guid>
      <description>方案一：使用try语句  使用方法
在R语言中，try语句的用法如下所示:  try(expr, silent = FALSE, outFile = getOption(&amp;quot;try.outFile&amp;quot;, default = stderr())) 可以看到，try语句共有三个参数，常用的是前两个参数。第一个参数expr为我们所要使用的表达式，第二个参数silent表示当错误出现时是否需要报告错误信息，其输入值应为逻辑变量，默认为FALSE，即选择不保持“沉默”，当错误出现时会立即报告错误信息。
如果参数expr所代表的表达式可以正确运行，则try语句的输出即为该表达式的运行结果，如果表达式无法正确运行，则try语句会输出一个“try-error”类的不可见对象，因此可以通过if语句对try语句的输出结果进行判断从而进行下一步的处理。
如果大段代码中有错误，想忽略错误，可以采用try()，但大段代码需放在**{ }**中：
你可以捕获**try()的输出，如果程序运行成功，返回计算结果；如果程序运行不成功，则可以通过class()**函数返回，错误类型 &amp;lsquo;try-error&amp;rsquo;。
使用示例  A = list(a=1,b=&amp;#39;abc&amp;#39;,c=-2,d=3) # 运行log(&amp;#39;abc&amp;#39;)会报错，运行log(-2)会出现警告 B = list() for (nm in names(A)) { x &amp;lt;- A[[nm]] temp &amp;lt;- try(log(x),silent=FALSE) if(&amp;#39;try-error&amp;#39; %in% class(temp)) # 判断当前循环的try语句中的表达式是否运行正确 { temp &amp;lt;- NA # 此处可以对运行错误的情况进行处理应对 } B[[nm]] &amp;lt;- temp } 方案二：使用tryCatch语句  使用方法
相较于try语句，tryCatch语句更为全面，能够处理和应对更为复杂的问题。其不仅能够处理表达式出现错误error的情形，还能够处理出现警告warning的情况。主要用法如下所示：  tryCatch( { expr }, warning = function(w) { warning-handler-code }, error = function(e) { error-handler-code }, finally = { cleanup-code } ) 可以看到，tryCatch语句的内部可以被划分为四个不同的部分。</description>
    </item>
    
    <item>
      <title>NMF包绘制热图</title>
      <link>https://kongjianyang.github.io/cn/2018/12/30/heatmap/</link>
      <pubDate>Sun, 30 Dec 2018 14:42:27 -0500</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/30/heatmap/</guid>
      <description>NMF包绘制热图 // Pandoc 2.9 adds attributes on both header and div. We remove the former (to // be compatible with the behavior of Pandoc :first-child&#34;); var i, h, a; for (i = 0; i 0) h.removeAttribute(a[0].name); } });  /*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){&#34;use strict&#34;;&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return t(e)}:t(e)}(&#34;undefined&#34;!=typeof window?window:this,function(C,e){&#34;use strict&#34;;var t=[],r=Object.</description>
    </item>
    
    <item>
      <title>R语言文本处理</title>
      <link>https://kongjianyang.github.io/cn/2018/12/27/r%E8%AF%AD%E8%A8%80%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/27/r%E8%AF%AD%E8%A8%80%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</guid>
      <description>常见函数 trimws(x)删去字符型向量x的每个元素的开头和结尾的所有空格。加选项which=’left’可以仅删去开头的空格， 选项which=’right’可以仅删去结尾的空格。
trimws(c(&amp;quot; 李明&amp;quot;, &amp;quot;李明 &amp;quot;, &amp;quot; 李明 &amp;quot;, &amp;quot;李 明&amp;quot;)) ## [1] &amp;quot;李明&amp;quot; &amp;quot;李明&amp;quot; &amp;quot;李明&amp;quot; &amp;quot;李 明&amp;quot; sprintf是C语言中sprintf的向量化版本，可以把一个元素或一个向量的各个元素按照C语言输出格式转换为字符型向量。
sprintf(&amp;#39;tour%02d.jpg&amp;#39;, 1:10) ## [1] &amp;quot;tour01.jpg&amp;quot; &amp;quot;tour02.jpg&amp;quot; &amp;quot;tour03.jpg&amp;quot; &amp;quot;tour04.jpg&amp;quot; &amp;quot;tour05.jpg&amp;quot; ## [6] &amp;quot;tour06.jpg&amp;quot; &amp;quot;tour07.jpg&amp;quot; &amp;quot;tour08.jpg&amp;quot; &amp;quot;tour09.jpg&amp;quot; &amp;quot;tour10.jpg&amp;quot; substring函数求字符串字串， 用开始字符位置和结束字符位置设定字串位置。
substring(c(&amp;quot;123456789&amp;quot;, &amp;quot;abcdefg&amp;quot;), 3, 5) ## [1] &amp;quot;345&amp;quot; &amp;quot;cde&amp;quot; 用gsub(pattern, replacement, x, fixed=TRUE) 把字符型向量x中每个元素中出现的子串 pattern都替换为replacement。
gsub(&amp;#39;the&amp;#39;, &amp;#39;**&amp;#39;, c(&amp;#39;New theme&amp;#39;, &amp;#39;Old times&amp;#39;, &amp;#39;In the present theme&amp;#39;), fixed=TRUE) ## [1] &amp;quot;New **me&amp;quot; &amp;quot;Old times&amp;quot; &amp;quot;In ** present **me&amp;quot; strsplit(x,split,fixed=TRUE)可以把字符型向量x的每一个元素按分隔符split拆分为一个字符型向量， strsplit的结果为一个列表， 每个列表元素对应于x的每个元素。</description>
    </item>
    
    <item>
      <title>R语言中的调色板</title>
      <link>https://kongjianyang.github.io/cn/2018/12/20/r%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E8%B0%83%E8%89%B2%E6%9D%BF/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/20/r%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E8%B0%83%E8%89%B2%E6%9D%BF/</guid>
      <description>使用RColorBrewer包实现R图形的亚瑟个性化
library(RColorBrewer) display.brewer.all()  连续型调色板（第一个颜色列表），适用于从低到高（梯度）的有序数据。调色板名称是：Blues，BuGn，BuPu，GnBu，Greens，Grays，Oranges，OrRd，PuBu，PuBuGn，PuRd，Purples，RdPu，Reds，YlGn，YlGnBu YlOrBr，YlOrRd。
 定性调色板（第二种颜色列表），最适合表示名义或分类数据。它们并不意味着群体之间的巨大差异。 调色板名称为：Accent，Dark2，Paired，Pastel1，Pastel2，Set1，Set2，Set3。
 差异调色板（第三种颜色列表），强调数据范围两端颜色相反。分散的调色板是：BrBG，PiYG，PRGn，PuOr，RdBu，RdGy，RdYlBu，RdYlGn，Spectral
  -仅显示色盲友好的调色板，要仅显示色盲友好的brewer调色板，请指定colorblindFriendly选项= TRUE，如下所示：
display.brewer.all(colorblindFriendly = TRUE) # 1. Visualize a single RColorBrewer palette # by specifying its name display.brewer.pal(n, name) # 2. Return the hexadecimal color code of the palette brewer.pal(n, name) 函数参数的描述：n：调色板中不同颜色的数量，最小值为3，最大值取决于调色板。 name：上面列表中的调色板名称。 例如name = RdBu。
以下R代码演示了如何显示一个单一的r颜色brewer调色板。
# View a single RColorBrewer palette by specifying its name display.brewer.pal(n = 8, name = &amp;#39;Dark2&amp;#39;) # Hexadecimal color specification brewer.</description>
    </item>
    
    <item>
      <title>Rstudio的常用快捷键</title>
      <link>https://kongjianyang.github.io/cn/2018/12/18/rstudio%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/18/rstudio%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>Rstudio IDE Cheat Sheet
0. 常用   Windows Mac     清空控制台 Ctrl+L Command+L  新建一个文件 Ctrl+Shift+N Command+Shift+N  打开文件 Ctrl+O Command+O  保存当前文件 Ctrl+S Command+S  关闭当前文件 Ctrl+W Command+W  关闭所有打开的文件 Ctrl+Shift+W Command+Shift+W  运行当前/被选中的代码 Ctrl+Enter Command+Enter  运行当前文件 Ctrl+Alt+R Command+Option+R  运行当前代码块 Ctrl+Alt+C Command+Option+C  运行下一个代码块 Ctrl+Alt+N Command+Option+N  执行一个外部文件中的代码 Ctrl+Shift+O Command+Shift+O  执行当前文件中的代码 Ctrl+Shift+S Command+Shift+S  折叠选中代码 Alt+L Command+Option+L  打开选中代码 Shift+Alt+L Command+Shift+Option+L  折叠所有代码 Alt+0 Command+Option+0  打开所有代码 Shift+Alt+0 Command+Shift+Option+0  切换到前一个tab Ctrl+Alt+Left Ctrl+Option+Left  切换到下一个tab Ctrl+Alt+Right Ctrl+Option+Right  切换到第一个tab Ctrl+Shift+Alt+Left Ctrl+Shift+Option+Left  切换到最后一个tab Ctrl+Shift+Alt+Right Ctrl+Shift+Option+Right  注释/取消注释当前行 Ctrl+Shift+C Command+Shift+C     1.</description>
    </item>
    
    <item>
      <title>R从数据框中按组别移除离群值(outlier)</title>
      <link>https://kongjianyang.github.io/cn/2018/12/14/r%E4%BB%8E%E6%95%B0%E6%8D%AE%E6%A1%86%E4%B8%AD%E6%8C%89%E7%BB%84%E5%88%AB%E7%A7%BB%E9%99%A4%E7%A6%BB%E7%BE%A4%E5%80%BCoutlier/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/14/r%E4%BB%8E%E6%95%B0%E6%8D%AE%E6%A1%86%E4%B8%AD%E6%8C%89%E7%BB%84%E5%88%AB%E7%A7%BB%E9%99%A4%E7%A6%BB%E7%BE%A4%E5%80%BCoutlier/</guid>
      <description>离群值(outlier)通常被定义为小于 QL - l.5 IQR 或者 大于 Qu + 1.5 IQR的值，QL称为下四分位数， Qu称为上四分位数，IQR称为四分位数间距，是Qu上四分位数和QL下四分位数之差，其间包括了全部观察值的一半。
1.方法一： 定义功能剔除离群值
remove_outliers &amp;lt;- function(x, na.rm = TRUE, ...) { qnt &amp;lt;- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...) H &amp;lt;- 1.5 * IQR(x, na.rm = na.rm) y &amp;lt;- x y[x &amp;lt;= (qnt[1] - H)] &amp;lt;- NA y[x &amp;gt;= (qnt[2] + H)] &amp;lt;- NA y } 制造数据框
element &amp;lt;- sample(letters[1:5], 1e4, replace=T) value &amp;lt;- rnorm(1e4) df &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>R语言的小提琴图</title>
      <link>https://kongjianyang.github.io/cn/2018/12/14/r%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/14/r%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE/</guid>
      <description>


</description>
    </item>
    
    <item>
      <title>R中的循环多图处理技巧</title>
      <link>https://kongjianyang.github.io/cn/2018/12/12/r%E4%B8%AD%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%A4%9A%E5%9B%BE%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/12/r%E4%B8%AD%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%A4%9A%E5%9B%BE%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
      <description>1.制造一些图 制造一些图片，为后续的操作做准备
library(ggplot2) # This example uses the ChickWeight dataset, which comes with ggplot2 # First plot p1 &amp;lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) + geom_line() + ggtitle(&amp;quot;Growth curve for individual chicks&amp;quot;) # Second plot p2 &amp;lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) + geom_point(alpha=.3) + geom_smooth(alpha=.2, size=1) + ggtitle(&amp;quot;Fitted growth curve per diet&amp;quot;) # Third plot p3 &amp;lt;- ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet)) + geom_density() + ggtitle(&amp;quot;Final weight, by diet&amp;quot;) # Fourth plot p4 &amp;lt;- ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) + geom_histogram(colour=&amp;quot;black&amp;quot;, binwidth=50) + facet_grid(Diet ~ .</description>
    </item>
    
    <item>
      <title>R中的箱线图进阶</title>
      <link>https://kongjianyang.github.io/cn/2018/12/12/r%E4%B8%AD%E7%9A%84%E7%AE%B1%E7%BA%BF%E5%9B%BE%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/12/12/r%E4%B8%AD%E7%9A%84%E7%AE%B1%E7%BA%BF%E5%9B%BE%E8%BF%9B%E9%98%B6/</guid>
      <description> 箱线图能够显示出离群点（outlier），离群点也叫做异常值，通过箱线图能够很容易识别出数据中的异常值。
geom_boxplot函数中有outlier开头的多个参数，用于修改离群点的属性：
 outlier.colour：离群点的颜色 outlier.fill：离群点的填充色 outlier.shape：离群点的形状 outlier.size：离群点的大小 outlier.alpha：离群点的透明度  绘制散点图，并标记异常值：
ToothGrowth$dose &amp;lt;- as.factor(ToothGrowth$dose) ggplot(ToothGrowth, aes(x=dose, y=len,color=dose)) + geom_boxplot(outlier.colour=&amp;quot;red&amp;quot;, outlier.shape=7,outlier.size=4)+ scale_color_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))+ theme_bw() + theme(legend.position=&amp;quot;right&amp;quot;)+ labs(title=&amp;quot;Plot of length per dose&amp;quot;,x=&amp;quot;Dose (mg)&amp;quot;, y = &amp;quot;Length&amp;quot;)+ geom_dotplot(binaxis=&amp;#39;y&amp;#39;, stackdir=&amp;#39;center&amp;#39;, stackratio=1.5, dotsize=1.2) </description>
    </item>
    
    <item>
      <title>Notes From Advanced R Part Two</title>
      <link>https://kongjianyang.github.io/en/2018/12/06/notes-from-advanced-r-part-two/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/12/06/notes-from-advanced-r-part-two/</guid>
      <description>1. OO (Object-oriented) field guide R has four object oriented systems:
 base type: are mostly manipulated using C code S3 type: S3 is a very casual system. It has no formal definition of classes. S4 type: S4 has formal class definitions and multiple dispatch RC (Reference Classes) type  A class defines the behaviour of objects by describing their attributes and their relationship to other classes.
pryr provides tools to pry back the surface of R and dig into the details.</description>
    </item>
    
    <item>
      <title>Notes From Advanced R Part One</title>
      <link>https://kongjianyang.github.io/en/2018/12/02/notes-from-advanced-r/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/12/02/notes-from-advanced-r/</guid>
      <description>1. Data structure The three properties of a vector are type, length, and attributes.
All objects can have arbitrary additional attributes
Attributes can be accessed individually with attr() or all at once (as a list) with attributes().
y &amp;lt;- 1:10 attr(y, &amp;quot;my_attribute&amp;quot;) &amp;lt;- &amp;quot;This is a vector&amp;quot; attr(y, &amp;quot;my_attribute&amp;quot;) ## [1] &amp;quot;This is a vector&amp;quot;  2. Subsetting outer() function applies a function to two arrays.
x &amp;lt;- c(1, 2.</description>
    </item>
    
    <item>
      <title>R中cowplot包初步学习</title>
      <link>https://kongjianyang.github.io/cn/2018/11/28/r%E4%B8%ADcowplot%E5%8C%85%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/11/28/r%E4%B8%ADcowplot%E5%8C%85%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</guid>
      <description>cowplot是ggplot2包的一个简单插件，它的目的是为ggplot2提供一个出版级别的主题。
查看cowplot内的主要命令
library(cowplot) ## ## Attaching package: &amp;#39;cowplot&amp;#39; ## The following object is masked from &amp;#39;package:ggplot2&amp;#39;: ## ## ggsave ls(&amp;quot;package:cowplot&amp;quot;) ## [1] &amp;quot;add_sub&amp;quot; &amp;quot;align_margin&amp;quot; &amp;quot;align_plots&amp;quot; ## [4] &amp;quot;axis_canvas&amp;quot; &amp;quot;background_grid&amp;quot; &amp;quot;draw_figure_label&amp;quot; ## [7] &amp;quot;draw_grob&amp;quot; &amp;quot;draw_image&amp;quot; &amp;quot;draw_label&amp;quot; ## [10] &amp;quot;draw_line&amp;quot; &amp;quot;draw_plot&amp;quot; &amp;quot;draw_plot_label&amp;quot; ## [13] &amp;quot;draw_text&amp;quot; &amp;quot;GeomDrawGrob&amp;quot; &amp;quot;get_legend&amp;quot; ## [16] &amp;quot;get_panel&amp;quot; &amp;quot;ggdraw&amp;quot; &amp;quot;ggsave&amp;quot; ## [19] &amp;quot;gtable_remove_grobs&amp;quot; &amp;quot;gtable_squash_cols&amp;quot; &amp;quot;gtable_squash_rows&amp;quot; ## [22] &amp;quot;insert_xaxis_grob&amp;quot; &amp;quot;insert_yaxis_grob&amp;quot; &amp;quot;panel_border&amp;quot; ## [25] &amp;quot;plot_grid&amp;quot; &amp;quot;plot_to_gtable&amp;quot; &amp;quot;save_plot&amp;quot; ## [28] &amp;quot;theme_cowplot&amp;quot; &amp;quot;theme_map&amp;quot; &amp;quot;theme_nothing&amp;quot; 查看函数包含了哪些参数</description>
    </item>
    
    <item>
      <title>初次使用bookdown编写书籍</title>
      <link>https://kongjianyang.github.io/cn/2018/11/28/%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8bookdown%E7%BC%96%E5%86%99%E4%B9%A6%E7%B1%8D/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/11/28/%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8bookdown%E7%BC%96%E5%86%99%E4%B9%A6%E7%B1%8D/</guid>
      <description>bookdown支持采用Rmarkdown (R代码可以运行)或普通markdown编写文档，然后编译成HTML, WORD, PDF, Epub等格式。
1. 基本使用 使用要求：
 安装Rstudio 安装Pandoc  conda install -c conda-forge pandoc 接下来需要到.Renviron中设置环境：
RSTUDIO_PANDOC=/Applications/RStudio.app/Contents/MacOS/pandoc  安装bookdown  install.packages(&amp;quot;bookdown&amp;quot;) 下载demo：
git clone https://github.com/rstudio/bookdown-demo 然后进行编译，运行下载的示例中的bash _build.sh，_book目录下就是成书。
#!/bin/sh Rscript -e &amp;quot;bookdown::render_book(&#39;index.Rmd&#39;, &#39;bookdown::gitbook&#39;)&amp;quot; # 生成pdf需要安装好latex，如果不需要可以注释掉 Rscript -e &amp;quot;bookdown::render_book(&#39;index.Rmd&#39;, &#39;bookdown::pdf_book&#39;)&amp;quot; 如果想在Rstudio中进行预览：
bookdown:::serve_book(&amp;quot;./01Demo/bookdown-demo/&amp;quot;) 2. 文件格式   一个典型的bookdown文档包含多个章节，每个章节在一个R Markdown文件里面 (文件的语法可以是pandoc支持的markdown语法，但后缀必须为Rmd)。
  每一个章节都必须以# Chapter title开头。后面可以跟一段概括性语句，概述本章的内容，方便理解，同时也防止二级标题出现在这一页。默认系统会按照文件名的顺序合并Rmd文件。
  另外章节的顺序也可在_bookdown.yml文件中通过rmd_files:[&amp;quot;file1.Rmd&amp;quot;, &amp;quot;file2.Rmd&amp;quot;, ..]指定。
  如果有index.Rmd，index.Rmd总是出现在第一个位置。通常index.Rmd里面也需要有一章节，如果不需要对这一章节编号的话，可以写作# Preface {-}, 关键是{-}。
  在index.Rmd，可以定义Pandoc相关的YAML metadata, 比如标题、作者、日期等 (去掉#及其后的内容)。</description>
    </item>
    
    <item>
      <title>编写自己的第一个R包并发布到GitHub</title>
      <link>https://kongjianyang.github.io/cn/2018/11/28/%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAr%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0github/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/cn/2018/11/28/%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAr%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0github/</guid>
      <description>1. 编写R包 发现要深入了解一门语言要尝试给这个语言造轮子，所以就开始学习怎么开始写自己的第一个R包了。我习惯利用Rstudio编写R程序，所以在Rstudio中开发。
选择File -&amp;gt; New Project，然后选择New Directory，接着选择R Package，最后给你R包取个名字即可，如下图所示，可以选择git版本进行version control。我的包名称是Rtools。
RStudio会在当前目录（默认是个人目录下）创建一个R包文件夹，主要文件（夹）包括：man，R，DESCRIPTION，NAMESPACE以及xx.Rproj。下面是文件目录解释：
testR(包的名字，这里包的名字叫testR) | |--DESCRIPTION(描述文件，包括包的名字，版本号，标题，描述，依赖关系) |--R(函数源文件) |--function1.R |--function2.R |--... |--man(帮助文档) |--function1.Rd |--function2.Rd |--testR-package.Rd |--... |--NAMESPACE(命名空间) |--vignettes(包的描述文件，可以用rmarkdown写) |--src(非R脚本eg.C.C++,Python) |--data(R包中的数据，最好是.rda格式) |--demo(R包中的demo) |--test(R包中的测试代码) |--... DESCRIPTION文件写了这个R的描述信息，主要为了告诉别人（或者自己）这个R包的一些重要的元数据（官方说法），可以按照自己的需要进行修改：
Package: Rtools Type: Package Title: My First R Package Version: 0.1.0 Author: Liang Maintainer: The package maintainer &amp;lt;yourself@somewhere.net&amp;gt; Description: Just for learn License: GPL Encoding: UTF-8 LazyData: true RoxygenNote: 6.1.1 接下来需要准备好一个写好的R自定义函数，比如在R文件夹创建一个uniprot.R文件，然后将函数写入该文件；我们使用R包就是将输入参数导入函数中，然后函数给我们一个结果。比如我的函数如下：
idmapping &amp;lt;- function(query, inputid, outputid, fmt){ query &amp;lt;- paste(query, collapse = &amp;quot;,&amp;quot;) r &amp;lt;- httr::POST(&#39;http://www.</description>
    </item>
    
    <item>
      <title>Figure with error bar and significant markers based on ggplot2</title>
      <link>https://kongjianyang.github.io/en/2018/07/19/add-error-bar-and-significant-markers-to-the-figure-based-on-ggplot2/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/07/19/add-error-bar-and-significant-markers-to-the-figure-based-on-ggplot2/</guid>
      <description>Create the data set
library(ggplot2) df &amp;lt;- data.frame(treatment = factor(c(1, 1, 1, 2, 2, 2, 3, 3, 3)), response = c(2, 5, 4, 6, 9, 7, 3, 5, 8),group = factor(c(1, 2, 3, 1, 2, 3, 1, 2, 3)),se = c(0.4, 0.2, 0.4, 0.5, 0.3, 0.2, 0.4, 0.6, 0.7)) head(df) ## treatment response group se ## 1 1 2 1 0.4 ## 2 1 5 2 0.2 ## 3 1 4 3 0.</description>
    </item>
    
    <item>
      <title>Heatmap.2 and pheatmap in R practice</title>
      <link>https://kongjianyang.github.io/en/2018/07/17/heatmap-2-and-pheatmap-in-r-practice/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/07/17/heatmap-2-and-pheatmap-in-r-practice/</guid>
      <description>Part 1 heatmap.2 1. get the data library(gplots) ## ## Attaching package: &amp;#39;gplots&amp;#39; ## The following object is masked from &amp;#39;package:stats&amp;#39;: ## ## lowess library(RColorBrewer) data &amp;lt;- read.table(header = T, text = &amp;quot; ,var1,var2,var3,var4 measurement1,0.094,0.668,0.4153,0.4613 measurement2,0.1138,-0.3847,0.2671,0.1529 measurement3,0.1893,0.3303,0.5821,0.2632 measurement4,-0.0102,-0.4259,-0.5967,0.18 measurement5,0.1587,0.2948,0.153,-0.2208 measurement6,-0.4558,0.2244,0.6619,0.0457 measurement7,-0.6241,-0.3119,0.3642,0.2003 measurement8,-0.227,0.499,0.3067,0.3289 measurement9,0.7365,-0.0872,-0.069,-0.4252 measurement10,0.9761,0.4355,0.8663,0.8107&amp;quot;, fill = T, sep =&amp;quot;,&amp;quot;, row.names = 1) data ## var1 var2 var3 var4 ## measurement1 0.0940 0.6680 0.4153 0.4613 ## measurement2 0.1138 -0.3847 0.2671 0.</description>
    </item>
    
    <item>
      <title>Practice for &#39;R for Biologists&#39;</title>
      <link>https://kongjianyang.github.io/en/2018/07/16/practice-for-r-for-biologists/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/07/16/practice-for-r-for-biologists/</guid>
      <description>Part 1 Basic R displays 7 digits by default. You can display more digits with options(). More than 15 digits could be unreliable. This is a global option; remains in effect until further notice
options(digits = 15) 2/3; 2.1^3.1 ## [1] 0.666666666666667 ## [1] 9.97423999265871 built-in mathematical constants and functions
2*pi ## [1] 6.28318530717959 sin(2*pi) ## [1] -2.44929359829471e-16 # This is e exp(1)  ## [1] 2.71828182845905 sqrt(2) ## [1] 1.</description>
    </item>
    
    <item>
      <title>Functional programming-Map, Reduce, Filter and Lambda</title>
      <link>https://kongjianyang.github.io/en/2018/06/17/functional-programming-map-reduce-filter-and-lambda/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/06/17/functional-programming-map-reduce-filter-and-lambda/</guid>
      <description>This post will talk about four useful function in R programming. Map, Reduce, Filter and Lambda.
LAMBDA Lambda can be seen as a short (normally one line) function definition. There is no particular syntax for lambda in R, except that you don’t need to assign the function to a variable (function name), and also you will need to enclose the function using brackets or curly brace. For example:
(function add(x, y) x+y) {function add(x, y) x+y} We can pass the lambda function as a parameter to other functions e.</description>
    </item>
    
    <item>
      <title>Flow charts in R using DiagrammeR</title>
      <link>https://kongjianyang.github.io/en/2018/05/08/flow-charts-in-r-using-diagrammer/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/05/08/flow-charts-in-r-using-diagrammer/</guid>
      <description>library(DiagrammeR) DiagrammeR(&amp;quot;graph LR; A--&amp;gt;B; B--&amp;gt;C; B--&amp;gt;D&amp;quot;)  {&#34;x&#34;:{&#34;diagram&#34;:&#34;graph LR;\n A--B;\n B--C;\n B--D&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]} library(DiagrammeR) DiagrammeR(&amp;quot;graph TB; A(Rounded)--&amp;gt;B[Squared]; B---C{Rhombus!}; C--&amp;gt;D&amp;gt;flag shape]; C--&amp;gt;E((Circle));&amp;quot;)  {&#34;x&#34;:{&#34;diagram&#34;:&#34;graph TB;\n A(Rounded)--B[Squared];\n B---C{Rhombus!};\n C--Dflag shape];\n C--E((Circle));&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]} library(DiagrammeR) DiagrammeR(&amp;quot; graph TD; A[rect]-- add style --&amp;gt;A2[rect + style]; B{rhombus}---|+ some style|B2{rhombus + style}; C(rounded); D((circle)); style A2 fill:#c12,stroke-width:5px; style B2 fill:none, stroke-dasharray:10; &amp;quot;)  {&#34;x&#34;:{&#34;diagram&#34;:&#34;\n graph TD;\n A[rect]-- add style --A2[rect + style];\n B{rhombus}---|+ some style|B2{rhombus + style};\n C(rounded); D((circle)); \n style A2 fill:#c12,stroke-width:5px;\n style B2 fill:none, stroke-dasharray:10;\n&#34;</description>
    </item>
    
    <item>
      <title>Read Your Dataset in R From Copy Paste Text</title>
      <link>https://kongjianyang.github.io/en/2018/05/04/read-your-dataset-in-r-from-copy-paste-words/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/05/04/read-your-dataset-in-r-from-copy-paste-words/</guid>
      <description>Problem Sometimes, we may want import a small dataset to our R code. And this may be annoying if we still need store data into a csv or txt file and then read dataset in from a file. A convenient way is read data in just from copy paste text. This post will solve this problem.
 Solution Fisrt we need to store the data in a character variable</description>
    </item>
    
    <item>
      <title>Set Significant Letters in the Bar Plot in ggplot2</title>
      <link>https://kongjianyang.github.io/en/2018/05/04/set-letters-in-the-graph/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/05/04/set-letters-in-the-graph/</guid>
      <description>Problem As a biologist, one daily work is comparing the treatment and untreatment group and find if there are any significant difference. One common way is drawing a barplot with error bar and put the significant letters a little higher than the bar plot. Like a figure showing below: annotations for significant differences based on p value.
 Results are usually drawn in a barplot. For all variables with the same letter, the difference between the means is not statistically significant.</description>
    </item>
    
    <item>
      <title>ggplot2 plotting with error bars</title>
      <link>https://kongjianyang.github.io/en/2018/05/03/ggplot2-plotting-with-error-bars/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kongjianyang.github.io/en/2018/05/03/ggplot2-plotting-with-error-bars/</guid>
      <description>Problem As a biologist, we need to plot a lot of data every day. To make our result more convincing, usually we need to add error bars on the bar plot results. In this Poster, I will show how to use ggplot2 to make a bar plot with error bar.
 Solution Prepare Data The data we are using in this practice is ToothGrowth, we can get the data in datasets library.</description>
    </item>
    
  </channel>
</rss>
